name: Docker Image CI

on:
  push:
    # branches: [ master, prod ]
    branches: '*'
  pull_request:
    # branches: [ master, prod ]
    branches: '*'
env:
  RC_NAME: davidtnfsh/pycon_etl

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login to docker hub
      uses: actions-hub/docker/login@master
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Docker Login
    #   run: |
    #     docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

    # This is the a separate action that sets up buildx runner
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1 
    # So now you can use Actions' own caching!
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    # And make it available for the builds
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: false
        tags: davidtnfsh/pycon_etl:${{ github.sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Run test
      run: |
        chmod -R 777 logs;
        docker-compose -f docker-compose.yaml down --volumes; docker-compose -f docker-compose.yaml up -d;
        sleep 20;
        docker exec -i segments-etl_airflow-webserver_1 bash -c "pip install pytest pytest-cov; cd dags/dags; python -m pytest tests"
        [ $? -eq 0 ]  || exit 1

        docker exec airflow bash -c "airflow test OPENING_CRAWLER_V1 CRAWLER 2020-01-01"
        [ $? -eq 0 ]  || exit 1
        docker exec airflow bash -c "airflow test QUESTIONNAIRE_2_BIGQUERY TRANSFORM_data_questionnaire 2020-09-29"
        [ $? -eq 0 ]  || exit 1

    - name: Tag Docker image
      if: always()
      run: |
        docker tag ${RC_NAME}:${GITHUB_SHA} ${RC_NAME}:staging
        docker tag ${RC_NAME}:${GITHUB_SHA} ${RC_NAME}:latest

    - name: Push GITHUB_SHA to docker registry
      uses: actions-hub/docker@master
      if: always()
      with:
        args: push ${RC_NAME}:${GITHUB_SHA}

    - name: Push staging to docker registry
      uses: actions-hub/docker@master
      if: github.ref == 'refs/heads/master' && success()
      with:
        args: push ${RC_NAME}:staging

    - name: Push prod version to docker registry
      uses: actions-hub/docker@master
      if: github.ref == 'refs/heads/prod' && success()
      with:
        args: push ${RC_NAME}:latest
